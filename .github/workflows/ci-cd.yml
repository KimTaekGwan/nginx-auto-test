name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push blue container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: kimtaekgwan/fastapi_blue:latest

      - name: Build and push green container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: kimtaekgwan/fastapi_green:latest

      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
            # Install Docker Compose if not exists
            if ! command -v docker-compose &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker-compose
            fi

            # Create project directory if not exists
            sudo mkdir -p /home/ubuntu/project
            sudo chown -R ubuntu:ubuntu /home/ubuntu/project
            cd /home/ubuntu/project

            # Create docker-compose.yml
            cat << 'EOF' > docker-compose.yml
            version: '3.8'

            services:
              fastapi_blue:
                image: kimtaekgwan/fastapi_blue:latest
                ports:
                  - "8001:8000"
                env_file:
                  - .env
                restart: always

              fastapi_green:
                image: kimtaekgwan/fastapi_green:latest
                ports:
                  - "8002:8000"
                env_file:
                  - .env
                restart: always

              nginx:
                image: nginx:latest
                ports:
                  - "80:80"
                volumes:
                  - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
                depends_on:
                  - fastapi_blue
                  - fastapi_green
                restart: always
            EOF

            # Create nginx config directory and configuration
            sudo mkdir -p /home/ubuntu/project/nginx
            cat << 'EOF' > nginx/nginx.conf
            events {
                worker_connections 1024;
            }

            http {
                upstream backend {
                    server fastapi_blue:8000;
                    server fastapi_green:8000 backup;
                }

                server {
                    listen 80;
                    
                    location / {
                        proxy_pass http://backend;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                    }
                }
            }
            EOF

            # Create .env file
            echo "${{ secrets.ENV_FILE }}" > .env

            # Pull and start containers
            sudo docker-compose pull
            sudo docker-compose up -d
