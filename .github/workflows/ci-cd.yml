name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push blue container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: kimtaekgwan/fastapi_blue:latest

      - name: Build and push green container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: kimtaekgwan/fastapi_green:latest

      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
            # Install Docker Compose if not exists
              if ! command -v docker-compose &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker-compose
            fi

            # Create project directory if not exists
            sudo mkdir -p /home/ubuntu/project
            sudo chown -R $USER:$USER /home/ubuntu/project
            cd /home/ubuntu/project

            # Clone or pull private repository using GitHub token
            if [ -d .git ]; then
              echo "Repository already exists. Pulling the latest changes..."
              sudo git reset --hard HEAD
              sudo git pull
            else
              echo "Repository does not exist. Cloning the repository..."
              sudo git clone https://${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }} .
            fi

            # Copy necessary files
            echo "${{ secrets.ENV_FILE }}" > .env
            sudo chmod 644 .env

            # Pull and start containers
            docker-compose pull
            docker-compose up -d --no-deps fastapi_blue fastapi_green
