version: "3.3"

services:
  fastapi_blue:
    image: kimtaekgwan/fastapi_blue:latest
    container_name: fastapi_blue
    env_file:
      - .env
    environment:
      - APP_ENV=production
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    restart: always

  fastapi_green:
    image: kimtaekgwan/fastapi_green:latest
    container_name: fastapi_green
    env_file:
      - .env
    environment:
      - APP_ENV=staging
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "4444:4444"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - fastapi_blue
      - fastapi_green
    networks:
      - app-network
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
